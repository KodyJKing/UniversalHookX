// Wrappers for APIs from Ezesp.dll. Ensures that registers are preserved across calls.
//     - Arguments are pushed onto the stack in reverse order.
//     - Callee cleans up the stack.
//     - No registers are clobered.

// updateObject(uint_ptr id, float* position, uint32_t timeout)
label(_updateObject)
_updateObject:
    include(ezesp/x86/prolog)
    push [ebp+0C]
    push [ebp+08]
    push [ebp+04]
    call updateObject
    include(ezesp/x86/epilog)
    ret 0C

// setFovPtr(float* pointer)
label(_setFovPtr)
_setFovPtr:
    include(ezesp/x86/prolog)
    push [ebp+04]
    call setFovPtr
    include(ezesp/x86/epilog)
    ret 04

// setCameraPosPtr(void* pointer, unsigned int stride, int scale)
label(_setCameraPosPtr)
_setCameraPosPtr:
    include(ezesp/x86/prolog)
    push [ebp+0C]
    push [ebp+08]
    push [ebp+04]
    call setCameraPosPtr
    include(ezesp/x86/epilog)
    ret 0C

// setCameraForwardPtr(void* pointer, unsigned int stride, int scale)
label(_setCameraForwardPtr)
_setCameraForwardPtr:
    include(ezesp/x86/prolog)
    push [rbp+0C]
    push [rbp+08]
    push [rbp+04]
    call setCameraForwardPtr
    include(ezesp/x86/epilog)
    ret 0C

// setCameraUpPtr(void* pointer, unsigned int stride, int scale)
label(_setCameraUpPtr)
_setCameraUpPtr:
    include(ezesp/x86/prolog)
    push [rbp+0C]
    push [rbp+08]
    push [rbp+04]
    call setCameraUpPtr
    include(ezesp/x86/epilog)
    ret 0C
